{% extends 'partials/base.html.twig' %}
{% block content %}

    {% if page.header.title %}
        {% include 'partials/hero.html.twig' %}
    {% endif %}

    <div class="p-site bg-gradient-to-b to-white from-gray-100">

       {% if page.content %}
            <div class="p-site text-center w-full sm:w-full xl:w-3/5 m-auto">
                {{ page.content|raw }}
            </div>
        {% endif %}

        {% if page.collection %}     
            {# Filter Section - Fixed to use project_type #}
            {% set project_types = [] %}
                {% for project in page.collection() %}
                    {% if project.header.project_type %}
                        {% set project_types = project_types|merge([project.header.project_type]) %}
                    {% endif %}
                {% endfor %}
            {% set project_types = project_types|array_unique %}
        

        {% if project_types|length > 0 %}
            <section class="py-6">
                    <div class="flex flex-wrap justify-center gap-3">
                        <button class="filter-btn active transition-transform duration-200 hover:scale-105" data-filter="all">
                            All Projects
                        </button>
                        {% for project_type in project_types %}
                            <button class="filter-btn transition-transform duration-200 hover:scale-105" data-filter="{{ project_type }}">
                                {% if project_type == 'web-design' %}Web Design
                                {% elseif project_type == 'mobile-app' %}Mobile App
                                {% elseif project_type == 'ecommerce' %}Ecommerce
                                {% elseif project_type == 'UX-Case' %}UX Case
                                {% else %}{{ project_type|title }}
                                {% endif %}
                            </button>
                        {% endfor %}
                    </div>
            </section>
        {% endif %}

                <section class="p-site {#bg-gradient-to-b to-gray-100 from-white#}">
                    <div class="bento-grid grid grid-cols-1 md:grid-cols-2 lg:grid-cols-6 gap-6 auto-rows-[200px] delay-[100ms] duration-[600ms] taos:translate-y-[2%] taos:opacity-0" data-taos-offset="300">
                        {% for project in page.collection() %}

                            {% set gridClass = '' %}
                            {% if loop.index == 1 %}
                                {% set gridClass = 'col-span-2 row-span-2' %}
                            {% elseif loop.index == 4 %}
                                {% set gridClass = 'col-span-2' %}
                            {% elseif loop.index == 6 %}
                                {% set gridClass = 'row-span-2' %}
                            {% elseif loop.index == 8 %}
                                {% set gridClass = 'col-span-2' %}
                            {% endif %}

                            
                            <article class="project-card group relative overflow-hidden rounded-2xl bg-white text-black shadow-sm hover:shadow-xl {{ gridClass }}"
                                    data-category="{{ project.header.project_type ? project.header.project_type : 'uncategorized' }}">

                                {# Full tile clickable link #}
                                <a href="{{ project.url }}" class="absolute inset-0 z-20 cursor-pointer" aria-label="View {{ project.title }} project"></a>

                                {# Optimized Project Image - Only get first image for performance #}
                                {% if project.header.project_media %}
                                    {% set first_file = project.header.project_media|first %}
                                    {% set image = project.media.images[first_file.name] %}

                                    {% if image %}
                                        <div class="absolute inset-0">
                                            <img src="{{ image.url }}"
                                                alt="{{ project.title }}"
                                                class="w-full h-full object-cover transition-transform duration-200 group-hover:scale-105"
                                                loading="lazy"
                                                decoding="async">
                                            <div class="absolute inset-0 bg-gradient-to-t from-black/70 via-black/20 to-transparent"></div>
                                        </div>
                                    {% endif %}
                                {% else %}
                                    <div class="absolute inset-0 bg-gradient-to-br from-primary-100 to-primary-50"></div>
                                {% endif %}
                                
                                {# Project Content #}
                                <div class="relative z-10 p-6 h-full flex flex-col justify-end">
                                    {# Project Type Badge #}
                                    {% if project.header.project_type %}
                                        <div class="mb-3">
                                            <span class="inline-block px-3 py-1 text-xs font-medium bg-white/20 text-white rounded-full backdrop-blur-sm">
                                                {% if project.header.project_type == 'web-design' %}Web Design
                                                {% elseif project.header.project_type == 'mobile-app' %}Mobile App
                                                {% elseif project.header.project_type == 'ecommerce' %}Ecommerce
                                                {% elseif project.header.project_type == 'ux-case' %}UX Case
                                                {% else %}{{ project.header.project_type|title }}
                                                {% endif %}
                                            </span>
                                        </div>
                                    {% endif %}
                                    
                                    {# Project Title #}
                                    <h3 class="text-lg md:text-xl font-bold text-white mb-2 group-hover:text-blue-200 transition-colors">
                                        {{ project.title }}
                                    </h3>
                                    
                                    {# Project Description #}
                                    {% if project.header.description %}
                                        <p class="text-white/90 text-sm line-clamp-2 mb-3">
                                            {{ project.header.description }}
                                        </p>
                                    {% endif %}
                                    
                                    {# Project Meta #}
                                    <div class="flex items-center justify-between text-xs text-white/70">
                                        {% if project.header.client %}
                                            <span>{{ project.header.client }}</span>
                                        {% endif %}
                                        {% if project.header.year %}
                                            <time>{{ project.header.year }}</time>
                                        {% endif %}
                                    </div>
                                    
                                    {# Technologies Used - Limited to 3 for performance #}
                                    {% if project.header.technologies %}
                                        <div class="mt-3 flex flex-wrap gap-1">
                                            {% for tech in project.header.technologies|slice(0, 3) %}
                                                <span class="px-2 py-1 text-xs bg-white/10 text-white rounded backdrop-blur-sm">
                                                    {{ tech }}
                                                </span>
                                            {% endfor %}
                                            {% if project.header.technologies|length > 3 %}
                                                <span class="px-2 py-1 text-xs bg-white/10 text-white rounded backdrop-blur-sm">
                                                    +{{ project.header.technologies|length - 3 }}
                                                </span>
                                            {% endif %}
                                        </div>
                                    {% endif %}
                                </div>
                                
                                {# Hover Effect Overlay #}
                                <div class="absolute inset-0 bg-black/60 opacity-0 group-hover:opacity-100 transition-opacity duration-300 flex items-center justify-center pointer-events-none">
                                    <div class="text-center text-white">
                                        <svg class="w-12 h-12 mx-auto mb-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z"></path>
                                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z"></path>
                                        </svg>
                                        <span class="text-sm font-medium">View Project</span>
                                    </div>
                                </div>
                            </article>
                        {% endfor %}
                    </div>
                    
                    {# Load More Button - Only show if more than 12 projects #}
                    {% if page.collection().count() > 12 %}
                        <div class="text-center mt-12">
                            <button id="loadMoreBtn" class="inline-flex items-center px-6 py-3 border border-transparent text-base font-medium rounded-md text-white bg-blue-600 hover:bg-blue-700 transition-colors">
                                Load More Projects
                                <svg class="ml-2 -mr-1 w-5 h-5" fill="currentColor" viewBox="0 0 20 20">
                                    <path fill-rule="evenodd" d="M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z" clip-rule="evenodd"></path>
                                </svg>
                            </button>
                        </div>
                    {% endif %}
                    </div>
                </section>

            {% endif %}
    </div>




{# Optimized JavaScript for filtering with better performance #}
<script>
document.addEventListener('DOMContentLoaded', function() {
    const filterButtons = document.querySelectorAll('.filter-btn');
    const projectCards = document.querySelectorAll('.project-card');
    const bentoGrid = document.querySelector('.bento-grid');
    
    // Cache DOM elements for better performance
    const cardElements = Array.from(projectCards);
    
    // Debounce function to prevent excessive filtering
    function debounce(func, wait) {
        let timeout;
        return function executedFunction(...args) {
            const later = () => {
                clearTimeout(timeout);
                func(...args);
            };
            clearTimeout(timeout);
            timeout = setTimeout(later, wait);
        };
    }
    
    // Optimized filter function
    function filterProjects(filter) {
        // Add loading state
        bentoGrid.style.opacity = '0.7';
        bentoGrid.style.pointerEvents = 'none';
        
        // Use requestAnimationFrame for smooth animations
        requestAnimationFrame(() => {
            const visibleCards = [];
            
            cardElements.forEach((card, index) => {
                const cardCategory = card.getAttribute('data-category');
                const shouldShow = filter === 'all' || cardCategory === filter;
                
                if (shouldShow) {
                    visibleCards.push(card);
                    card.style.display = 'block';
                    card.style.opacity = '0';
                    card.style.transform = 'translateY(20px)';
                    
                    // Stagger animations for better visual effect
                    setTimeout(() => {
                        card.style.opacity = '1';
                        card.style.transform = 'translateY(0)';
                        card.style.transition = 'opacity 0.3s ease, transform 0.3s ease';
                    }, index * 50);
                } else {
                    card.style.opacity = '0';
                    card.style.transform = 'translateY(20px)';
                    card.style.transition = 'opacity 0.3s ease, transform 0.3s ease';
                    
                    setTimeout(() => {
                        card.style.display = 'none';
                    }, 300);
                }
            });
            
            // Update grid layout based on visible cards
            setTimeout(() => {
                bentoGrid.style.opacity = '1';
                bentoGrid.style.pointerEvents = 'auto';
                
                // Update counter if exists
                const counter = document.querySelector('.projects-counter');
                if (counter) {
                    counter.textContent = `${visibleCards.length} projects`;
                }
            }, 500);
        });
    }
    
    // Debounced filter function
    const debouncedFilter = debounce(filterProjects, 100);
    
    // Add event listeners to filter buttons
    filterButtons.forEach(button => {
        button.addEventListener('click', function(e) {
            e.preventDefault();
            
            const filter = this.getAttribute('data-filter');
            
            // Update active button with smooth transition
            filterButtons.forEach(btn => {
                btn.classList.remove('active');
                btn.classList.add('active');
                btn.classList.remove('active');
            });
            
            this.classList.add('active');
            this.classList.remove('active');
            this.classList.add('active');
            
            // Apply filter
            debouncedFilter(filter);
        });
    });
    
    // Add keyboard navigation
    document.addEventListener('keydown', function(e) {
        if (e.key >= '1' && e.key <= '9') {
            const buttonIndex = parseInt(e.key) - 1;
            const targetButton = filterButtons[buttonIndex];
            if (targetButton) {
                targetButton.click();
            }
        }
    });
    
    // Load more functionality
    const loadMoreBtn = document.getElementById('loadMoreBtn');
    if (loadMoreBtn) {
        loadMoreBtn.addEventListener('click', function() {
            // Add your load more logic here
            console.log('Load more clicked');
        });
    }
});

</script>

{% endblock %}